<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="mainMenuStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEig6wRIoOsaSKDrIEig6yBIoOwgRqPyHkig7CBIoOsgSKDsIEah7x5IoOwgSKDrIEig
        7CBGo/IeSKDsIEig6yBIoOwgRqPyHkig7CBIoOsgSKDsIEaj8h5IoOwgSKDsIEyZ2iBrb2oedGxdTnRs
        XXR0bF5LcWhYHG5lVQNvZlYASKDrH0ig68BIoOvHR6DrwUie6MRLmdrZSJ7oxUeg68BIn+nFTJ3i2Umf
        6cZIoOvCSZ/oxkya29lJn+jGSKDrwkmf6MZMmtvZSZ/oxkig68JJn+jGTJrb2Umf6MZIoe3BTZnYxGps
        Zt2GeWP0n49x/4h8ZfdvZlbHcGdYHHBnWABIoOslSKDrxEeg7TxztfYlg5+3UXh9fsiCn7hPi77vMYaq
        zFB/l63IZ5rLO0Ol+h1ahaY9aW9uylqFpj1Dp/weWoWmPWlvbspahaY9Q6f8HlqFpj1pb27KWoWmPUmn
        9x9qd3yEg3hi+quRYf+vjlL/rZJg/4l7Yvlza1x2h4B0Bkig6yVIoOy/QJ6tO3OyiYmZup+7k6yU4Zi7
        n7OWvaCnlrqhuZWzoeVSnHJ1AMZNAm9kVCBvZVTCb2VUIW9lVABvZVQhb2VUwm9lVCFvZVQAb2VUIW9l
        VMJyZ1YidmxcX4Z4YO2pjlz/oX03/5hxJv+gejX/rJBe/4p9ZvJ1bV5iR6DsJEyh6saWuLyfaauD9VKT
        av1SjWb/SZZp/EuTaPxPiGL9TJFn/3itjOCyurlPcnZ3O3BrYMp0eXk9e46gHnR5eT1wa2DKdHl5PXqN
        nx50eXk9cGtgyHNsXoSGeWHsqI5c/6F8N/+XbiP/lWwf/5dwJP+wkFP/qpl6/3ZuX6FFoe8jUJ7i2oyo
        sPZmp4D7bHti/4yEdP+Ah3L/g4Vy/4N5af9PeFb+eKqO+Y6bo9x4h5TJd4OK8HmIlcp6ipjBeYiVyneD
        ivB5iJTKeYmXwXmIlshzd3f1hHhi+amOXP+hfDf/l24j/5VsH/+WbSH/pYJA/72mfP+ViXT5dW1efUeg
        7CVLoerFnL7ClmipgPB8iHH/jn9x/3prXP96alv/kYJ0/1h+Xv97sZDVusC+SXJ2dzxwa2DKdHl5PXuO
        oB50eXk9cGtgynR4eT19jp8fdXNrgoR4Y/qpjl3/oXw3/5duI/+VbB//lm4h/6WDQf+7pHn/lYhw+3Vs
        XIuAeGsNR6DrJUuh7MKjxcmNbKyD8H6Kc/+Le27/dWZX/3VmVv+PgXP/WoBg/4C1k9Pf39UzaV9NHm9m
        VcJvZlUhb2ZVAG9mVSFvZlXCcWhXInRsXV6FeGHsqI5c/6F8N/+XbiP/lWwf/5ZuIf+mg0L/u6R5/5KH
        cv5sbWbhbG5oI2xuZwBHoOwkS6Dpxpu4uaFrq4L0f4t0/5ODdv5/cGH/f3Bh/5WHef9bgmH/frGP3rOw
        pFFsYlI7b2ZWym9mVj1vZlYeb2ZWPW9mVshyaluDhXlh66iOXf+hfDf/l24j/5VsH/+WbiL/p4RD/7qk
        ev+ShW79bHJwvE+X08tMmtwgTZnZAEWi8iNPmtvaiZqU9musg/txg2n/kot7/5GLe/+Qinr/iYFx/1WC
        X/55qIf6hoBx3G5lVclvZlbwb2ZWym9mVsFvZlbIbmZW9YN3YPiojl3/oXw3/5duI/+VbB//lm4i/6iF
        Rf+7pHv/kYVv+HBmVeBpb27QTJrc2Eaj8x9IoOwAR6DsJUug6cWUu7yOcbiO62Ckevxinnb/X511+l2b
        c/pdmnL8WqF3/3mzj9GwsaRDbWNTPG9mVspvZlY9cmpaH3JqXIKDd2D6qI5d/6F8N/+XbiP/lWwf/5Zu
        Iv+ohkb/u6R7/5CEbvlza1yBc2RPHlqFpj1Jn+jGSKDsIEig6wBIoOslSKDsv0Wnuzh/wpl5ocCnr5et
        l9yewKamncWpmJ2/qa2ZtafgV6R6aQD/YwFvZVYgb2ZWwnFpWSJ1bV9ehnlh7KiOXf+hfDf/l24j/5Vs
        H/+XbiL/qYdH/7ulfP+Ogm38b2ZW33BnWCFdg6AASKDrIUig68JIoOsgSKDrAEig7SVJn+nEWYSmPJB4
        aCCKf3NLenBix4yBdEmej4MskI2LS4KLk8h7eHc7bmNSHW9mVj1vZlbIcmpbg4V5Yeuojl3/oXw3/5du
        I/+VbB//l28j/6mISP+6pHz/jYFs+3JpWq9vZlbNb2ZWPXJiTB5ahaU+SZ/oxkig7CBIoOsAS5vfI1GU
        y9dqbmvQcGZW3YN3Y+R2bFr4bmVW129lVb5vZ1jJcGxi8G9nWMpvZlbBb2ZWym9mVvSEd2H4qY5d/6F8
        N/+XbiP/lWwf/5dvI/+qiEn/uaR9/4yAa/ZvZlbeb2ZWzW9mVvBvZlbKb2VUwWlvbstMmtvZRqPyH0ig
        6wBqbWgkam1oyXFrXrmaiGf92rh7/7+kc/99cl7gcmpbT3R4djp4hI3KdHZ0PW5jUh1sZFU7fXJg5a+Y
        bv+kgD3/l24j/5VsH/+XbyP/qolL/7mkff+Lf2v3cmlbdHBnVx1vZlY9b2ZWym9mVj1yYkweWoWlPkmf
        6MZIoOwgSKDrAHBnVyZvZlbfmodl/dyxZP/jrUv/5LFX/7+ha/+BdWDIeHt4T3mKmcB5ipggknVUAm9n
        WTB8cmDisptz/6aDQf+XbyP/l28k/6yLTf+5pH7/in9q+W9mVt1wZ1cgb2ZXAG9mViFvZlbCb2ZWIVuD
        oQBIoOshSKDrwkig6yBIoOsAdW1eiZuJaPncsWX/4ahC/92gM//fozn/57po/7eiff92cGXLeISNzHR3
        dT93bl6Fe3Jh2m9mVveHemT/r5Zn/6iGRf+vj1T/uaR+/4l+avhyaVqjb2ZWzG9mVj1vZlYeb2ZWPW9m
        VspvZlY9cmJMHlqFpT5Jn+jGSKDsIEig6wCBdmPi1rZ9/+SuTv/doDP/3Z8w/96hNP/js17/oo5s/29n
        WfZxbGL2cGdY56KPbfnKsID/hnhh/21lVviHe2X2taF+/7uqiv+IfWn0bmVW3G9mV8tvZlbwb2ZWym9m
        VsFvZlbKb2ZW8G9mVspvZVTBaW9uy0ya29lGo/IfSKDrAHpwX723oHf/5bdk/9+lPf/doDL/3aAy/+Co
        Qv/Io2H/g3dh+HFuZPufi2X/37Nl/+a0Wv/PrG3/iXxk8XVtX69+dGTFe3Ji73NqW2lwZ1ccb2ZWPW9m
        VspvZlY9b2ZWHm9mVj1vZlbKb2ZWPXJiTB5ahaU+SZ/oxkig7CBIoOsAcmpbOndsWue2nXH/57xw/+a2
        X//gpj7/3qI2/+OsS//Ko17/tpde/92uWv/gpz//4KY//+vBdf+7qIX/dm5eo3JqWypuZVXEb2ZWIW9m
        VgBvZlYhb2ZWwm9mViFvZlYAb2ZWIW9mVsJvZlYhW4OhAEig6yFIoOvCSKDrIEig6wBqbWkkamxn0ndv
        X+SrmXj/tp1v/92sVf/eozf/3qE0/+CmPv/hqEH/36M5/9+jOf/nuGX/z7WH/4d7Z+9za1xjb2ZWO29m
        VslvZlY9b2ZWHm9mVj1vZlbKb2ZWPW9mVh5vZlY9b2ZWym9mVj1yYkweWoWlPkmf6MZIoOwgSKDrAEub
        3yNRlMvXam5q2W9mVuB1a1nxyqZk/+GoQf/dnzD/3Z8w/92fMP/dnzD/469R/9Cyfv+Cd2L8bmVV3G9m
        VsFvZlbKb2ZW8G9mVspvZlbBb2ZWym9mVvBvZlbKb2ZWwW9mVspvZlbwb2ZWym9lVMFpb27LTJrb2Uaj
        8h9IoOsASKDtJUmf6cRahac8cmJMGnNrXIq1nXH/57Ze/96jOP/dnzD/3Z8w/92gMv/ksVb/oo1n/2xk
        VeRvZlY6b2ZWHW9mVj1vZlbKb2ZWPW9mVh5vZlY9b2ZWym9mVj1vZlYeb2ZWPW9mVspvZlY9cmJMHlqF
        pT5Jn+jGSKDsIEig6wBIoOslSKDrwEig6yFhfpEAc2tdPIF2Ye/GqXT/5bNb/9+jOf/dnzD/3Z8x/+Kq
        R/+3mmT/cWhY429nWSNwZ1cAb2ZWIW9mVsJvZlYhb2ZWAG9mViFvZlbCb2ZWIW9mVgBvZlYhb2ZWwm9m
        ViFbg6EASKDrIUig68JIoOsgSKDrAEig7CVJn+jEWoWlPnJiTB5vZlY7bmVW3X1yXvTApHL/5bVe/9+k
        O//dnzH/36M5/9+vWv+ijGb7dGxdkHBoWiJvZlY7b2ZWym9mVj1vZlYeb2ZWPW9mVspvZlY9b2ZWHm9m
        Vj1vZlbKb2ZWPXJiTB5ahaU+SZ/oxkig7CBIoOsARqPyI0ya29dpb27Lb2VUwW9mVspvZlbxbmVW3Hpv
        XOm7oHH+5LZi/9+lPf/doDL/4KY//96wXv+mj2b7dWtZ421kVeRuZlb0b2ZWxm9mVr5vZlbJb2ZW8G9m
        VspvZlbBb2ZWym9mVvBvZlbKb2VUwWlvbstMmtvZRqPyH0ig6wBIoOwlSZ/oxFqFpT5yYkweb2ZWPW9m
        VspvZlY7cGhbMntxX7y1nHD/5LZk/+CmP//doDP/4KU9/+GwWP/BoWf/k4Fi/3htWvZxaVmccGhaV3Jp
        WktvZlbJb2ZWPW9mVh5vZlY9b2ZWym9mVj1yYkweWoWlPkmf6MZIoOwgSKDrAEig6yVIoOvASKDrIVyD
        oABvZlUhb2ZVwm9mVSF3bl4AgXZlL390YeivmG7/47hq/+OsSv/fpTz/4KY9/+OtTf/htGL/0K9z/7ai
        fv2UiHTwdWtbrW9mVcRvZlUgb2ZVAG9mVSFvZlXCb2ZVIVuDoABIoOshSKDrwkig6yBIoOsASKDrJUig
        68RIoOs+RqP0HlqFpj1pb27KWoWmPUGl+h5tmLk7houH1XR3ctelk3L/2LmB/+O+e//nvnb/5792/+jC
        f//lxo7/0LuV/5SLef1tdHOxaW9vylqFpj1Dp/weWoWmPWlvbspahaY9RqP0Hkig6z5IoOvGSKDrIEig
        6wBIoOsfSKDrv0ig68VIoOvASZ/oxEya29hJn+jESKDrwEqg6cRQn+HXUJbQzmtsZd9/c1/fkYRs5pyN
        cvGfkHTzmotx7ot/auJ2bFvfamtl3U+X08pMmt3XSZ/oxEig68BJn+jETJrb2Emf6MRIoOvASKDrxUig
        68FIoOsbSKDrAEig6wVIoOsfSKDrJUig6yVIoOwlRqPyI0ig7CVIoOslR6DsJUSh8SRLmt0kaW1pI2lg
        USNsZlotcWpeQXNsYEhvaVw8amNWJ2xiUiNqbWkjTJrcJEWj9CRIoOwlSKDrJUig7CVGo/IjSKDsJUig
        6yVIoOslSKDrH0ig6wRIoOsA/////wAAAAEAAAABAAAAAAABEAAAAAAAAAAAAAAAAAAAAQABAAAAAQAA
        AAEAAAABAAAAEQAAAAEAAAABAAAAAQAAAREAAAABAAAAAQAAAAEAABERAAAAAQAAAAEAAAABEAEREQAA
        AAEAAAABAAAAAREAAREAAAABAAAAAQAAAAE=
</value>
  </data>
</root>